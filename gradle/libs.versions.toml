[versions]
accompanist = "0.32.0"
activity-compose = "1.8.2"
androidGradle = "8.3.0"
androidTools = "31.2.2"
androidx-test-ext-junit = "1.1.5"
compose-bom = "2024.02.01"
core-ktx = "1.12.0"
espresso-core = "3.5.1"
hilt = "2.50"
hiltExt = "1.2.0"
kotlin = "1.9.22"
kotlinxCoroutines = "1.7.3"
kotlinxSerialization = "1.6.0"
ksp = "1.9.22-1.0.16"
lifecycle-runtime-ktx = "2.7.0"
okhttp = "4.12.0"
retrofit = "2.9.0"
robolectric = "4.11.1"

[libraries]
accompanist-permissions = { module = "com.google.accompanist:accompanist", version.ref = "accompanist" }
android-desugar-jdk-libs = { module = "com.android.tools:desugar_jdk_libs", version = "2.0.4" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-ext-junit" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso-core" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle-runtime-ktx" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }
androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3" }
androidx-compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }
androidx-compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
androidx-test-rules = { module = "androidx.test:rules", version = "1.5.0" }
androidx-test-runner = { module = "androidx.test:runner", version = "1.5.2" }
androidx-tracing-ktx = { module = "androidx.tracing:tracing-ktx", version = "1.3.0-alpha02" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-guava = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-guava", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.5.0" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinxSerialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
robolectric-shadows-framework = { module = "org.robolectric:shadows-framework", version.ref = "robolectric" }

# hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hiltExt" }
hilt-work = { module = "androidx.hilt:hilt-work", version.ref = "hiltExt" }

# network
okhttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-kotlinx-serialization = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version = "1.0.0" }

# Dependencies of the included build-logic
android-gradle = { module = "com.android.tools.build:gradle", version.ref = "androidGradle" }
android-common = { module = "com.android.tools:common", version.ref = "androidTools" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-gradle-plugin = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }

[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradle" }
android-library = { id = "com.android.library", version.ref = "androidGradle" }
hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
secret-gradle-plugin = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version = "2.0.1" }

# 프로젝트에서 정의한 플러그인
simpleweatherandroid-android-application = { id = "simpleweatherandroid.android.application", version = "undefined" }
simpleweatherandroid-android-application-compose = { id = "simpleweatherandroid.android.application.compose", version = "undefined" }
simpleweatherandroid-android-library = { id = "simpleweatherandroid.android.library", version = "undefined" }
simpleweatherandroid-android-library-compose = { id = "simpleweatherandroid.android.library.compose", version = "undefined" }
simpleweatherandroid-android-hilt = { id = "simpleweatherandroid.android.hilt", version = "undefined" }